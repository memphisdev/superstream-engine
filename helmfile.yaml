repositories:
    - name: influxdata
      url: https://helm.influxdata.com/
    - name: nats 
      url: https://nats-io.github.io/k8s/helm/charts/
    - name: superstream 
      url: https://k8s.superstream.dev/charts/


environments:
  default:
    values:
    - ./environments/default.yaml
    - haDeployment: true
    - requestCpu: '2'
    - requestMemory: 2Gi
    - natsReleaseName: nats # Set the release name for the NATS deployment, which is used to uniquely identify the set of resources deployed for NATS.
    - superstreamReleaseName: superstream # Specify the release name for the Superstream deployment, uniquely identifying the resources for Superstream.
    - telegrafReleaseName: telegraf # Define the release name for the Telegraf deployment, used for identifying the Telegraf resources in the cluster.
    - natsHelmVersion: 1.1.10
    - telegrafHelmVersion: 1.8.43
    - controlPlane: broker.superstream.dev # Indicate the control plane configuration or identifier, which may include settings specific to the cluster's control plane.
    - releaseDate: 2024-02-28-12-43


helmDefaults:
  wait: true

---
releases:
  - name: {{ .Values.natsReleaseName }}
    installed: true
    namespace: {{ .Values.namespace }}
    chart: nats/nats
    version: {{ .Values.natsHelmVersion }}
    values:
      - container:
          env: 
            ACTIVATION_TOKEN:
              valueFrom:
                secretKeyRef:
                  name: superstream-creds
                  key: ACTIVATION_TOKEN 
      - promExporter:
          enabled: true
      - natsBox:
          enabled: false  
      - config:
            cluster: 
              enabled: {{ .Values.haDeployment }}
            jetstream: 
              enabled: true
            merge: { 
                            accounts: {
                              SYS: {
                                users: [{user: superstream_sys, password: << $ACTIVATION_TOKEN >>}]
                                # System account allows subscribing to $SYS.>
                              },
                              internal: {
                                jetstream: enable,
                                users: [{user: superstream_internal, password: << $ACTIVATION_TOKEN >>}]
                                # Regular user account for clients
                              }
                            },
                            # Reference the system account
                            "system_account": SYS,
                            "remote_syslog": "udp://{{ .Values.superstreamReleaseName }}-syslog.{{ .Values.namespace }}:5514",
                            "max_payload":  << 8MB >>
            }

                  
  - name: {{ .Values.telegrafReleaseName }}
    installed: true
    namespace: {{ .Values.namespace }} 
    chart: influxdata/telegraf 
    version: {{ .Values.telegrafHelmVersion }}
    values:
      - metrics:
          internal:
            collect_memstats: true
      - rbac:
          rules:    
          - apiGroups: [""]
            resources:
            - services
            - endpoints
            - pods
            verbs: ["get", "list", "watch"]          
      - config:
          outputs:
            - influxdb_v2:
                urls:
                - "https://superstream-monitoring.mgmt.memphis-gcp.dev"
                organization: "superstream"
                bucket: "logs"
                content_encoding: "gzip"
                http_headers:
                  Authorization: "{{ .Values.activationToken }}"
                namepass: ["syslog"]
            - influxdb_v2:
                urls:
                - "https://superstream-monitoring.mgmt.memphis-gcp.dev"
                organization: "superstream"
                bucket: "metrics"
                content_encoding: "gzip"
                http_headers:
                  Authorization: "{{ .Values.activationToken }}"
                namedrop: ["syslog"] 
          processors:
            - enum:
                mapping:
                  field: "status"
                  dest: "status_code"
                  value_mappings:
                    healthy: 1
                    problem: 2
                    critical: 3    
            - starlark:
                namepass: ["syslog"]  
                source: |
                  def apply(metric):
                      unique_str = metric.name + str(metric.fields) + str(metric.tags)
                      random_value = str(hash(unique_str))[-8:]
                      metric.tags['eventId'] = random_value
                      return metric                                         
          inputs:
          - syslog:
              server: "udp://:6514"
              tags:
                accountId: "{{ .Values.accountId }}_{{ .Values.name }}"
          - prometheus:
              monitor_kubernetes_pods_namespace: "{{ .Values.namespace }}"
              kubernetes_label_selector: "app.kubernetes.io/name in (nats, superstream)"
              monitor_kubernetes_pods: true
              monitor_kubernetes_pods_method: "settings+annotations"
              monitor_kubernetes_pods_port: 7777
              tags:
                accountId: "{{ .Values.accountId }}_{{ .Values.name }}"
          - internal:
              tags:
                accountId: "{{ .Values.accountId }}_{{ .Values.name }}"
                chart: "telegraf-{{ .Values.telegrafHelmVersion }}"

  - name: {{ .Values.superstreamReleaseName }} 
    installed: true
    namespace: {{ .Values.namespace }}
    chart: superstream/superstream
    version: {{ .Values.helmVersion }}
    values:
      - config.yaml
      - superstream:
          environment: {{ .Values.name }}
          ha: {{ .Values.haDeployment }}
      - dataPlane:
          secret:
            activationToken: {{ .Values.activationToken }}
          resources:
            requests:
              cpu: {{ .Values.requestCpu }}
              memory: {{ .Values.requestMemory }}
          controlPlane:
            host: {{ .Values.controlPlane }}
          internalNatsConnection:
            host: {{ .Values.natsReleaseName }}
          releaseDate: {{ .Values.releaseDate }} 
